<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTicketFreeze" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:w="clr-namespace:WorkSpace;assembly=GetMinutesBetweenDates" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_EmployeesWorkHoursDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_HolidaysList" Type="InArgument(scg:List(s:DateTime))" />
    <x:Property Name="io_BusinessRuleException" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="io_ClosingPeriod" Type="InOutArgument(x:Int32)" />
    <x:Property Name="io_TicketData" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="io_SlaClosingChangeHistory" Type="InOutArgument(x:String)" />
    <x:Property Name="io_ClosingTemp" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>480,1381</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>WorkSpace</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>GetMinutesBetweenDates</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence for Waitig (freeze SLA timer)" sap:VirtualizedContainerService.HintSize="440,1301" sap2010:WorkflowViewState.IdRef="Sequence_175">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="startDateTime" />
      <Variable x:TypeArguments="s:DateTime" Name="endDateTime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="workDayStart" />
      <Variable x:TypeArguments="x:TimeSpan" Name="workDayEnd" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign WaitingDate" sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_186">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[io_TicketData("WaitingDate")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[io_TicketData("HistoryDate")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign StartDateTime" sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_219">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[startDateTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[CDate(io_TicketData("FromDate"))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign StartDateTime" sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_220">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[endDateTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[CDate(io_TicketData("WaitingDate"))]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="If no workday for employee throw BusinessRuleException" sap:VirtualizedContainerService.HintSize="418,511" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="264,284" sap2010:WorkflowViewState.IdRef="Sequence_195">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign WorkDayStart" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_217">
            <Assign.To>
              <OutArgument x:TypeArguments="x:TimeSpan">[workDayStart]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.Parse(in_EmployeesWorkHoursDT.AsEnumerable().Where(Function(r) r("Name").ToString() = io_TicketData("Assignee")).Single()("WorkDayStart").ToString())]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign WorkDayEnd" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_218">
            <Assign.To>
              <OutArgument x:TypeArguments="x:TimeSpan">[workDayEnd]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.Parse(in_EmployeesWorkHoursDT.AsEnumerable().Where(Function(r) r("Name").ToString() = io_TicketData("Assignee")).Single()("WorkDayEnd").ToString())]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_216">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:BusinessRuleException">[io_BusinessRuleException]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException(String.Format("Incorrect arguments. Check employee in WorkHoursDT:{0}Employee:{1}{0}StartDateTime:{2}{0}EndDateTime:{3}{0}WorkDayStart:{4}{0}WorkDayEnd:{5}", vbnewline, io_TicketData("Assignee"), StartDateTime, EndDateTime, WorkDayStart, workDayEnd))]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <w:CalculateMinutesBetweenDates BreakEnd="{x:Null}" BreakStart="{x:Null}" DisplayName="Calculate minutes between dates" EndDate="[endDateTime]" sap:VirtualizedContainerService.HintSize="418,22" HolidaysList="[in_HolidaysList]" sap2010:WorkflowViewState.IdRef="CalculateMinutesBetweenDates_1" Minutes="[io_ClosingTemp]" StartDate="[startDateTime]" WorkDayEnd="[workDayEnd]" WorkDayStart="[workDayStart]" />
    <Assign DisplayName="Add ClosingTemp to ClosingPeriod" sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_187">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[io_ClosingPeriod]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[io_ClosingPeriod + io_ClosingTemp]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign SLAClosingChangeHistoryForEmail" sap:VirtualizedContainerService.HintSize="418,64" sap2010:WorkflowViewState.IdRef="Assign_190">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[io_SlaClosingChangeHistory]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_SlaClosingChangeHistory + String.Format("-&gt; {1} ({2}) = {3} мин.{0}", 
vbnewline, 
CDate(io_TicketData("WaitingDate")).ToString("dd.MM.yyyy HH:mm:ss", New System.Globalization.CultureInfo("ru-RU")), 
io_TicketData("NewValueToString"), 
io_ClosingTemp)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign FromDate" sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_214">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[io_TicketData("FromDate")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[io_TicketData("HistoryDate")]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>